/* -*- coding: cp1251 -*- */

d : k * F^a;

ja : F/d;

k*((F + Fv)^a - Fv^a) = d
  d = 1mum, F = ja * 1mum =>
k*((ja + Fv)^a - Fv^a)=1


tomin(Fv_i, ja_i) := (k*((ja_i + Fv_i)^a - Fv_i^a) - 1)^2;

/* [preload force, axial rigidity, lift off force]
   [[..] light, [..] medium, [..] hard preload]
*/
b : [[283, 76.8, 880], [931, 131.9, 3138], [1923, 191.7, 6964]]; /* B7015C.T.P4S */
b : [[211, 64.5, 658], [704, 111.7, 2387], [1459, 162.8, 5310]]; /* B7012C.T.P4S */
b : [[ 45, 41.0, 139], [140,  66.0,  464], [ 300,  97.0, 1068]]; /* S 61812 C TA */

/* [k = 0.45128353063854, a = 0.50487335153105] */
/* [k = 0.48087094287598, a = 0.50120518922149] */
/* [k = 0.4103683929804 , a = 0.49280602552547] */

Fvs : map(first, b);
jas : map(second, b);
Fmaxs : map(third, b);

minsum : sum(tomin(b[pl][1], b[pl][2]), pl, 1, 3);

/* unconstrained BFGS minimization */
load (lbfgs);
estimates : lbfgs(minsum, [k, a], [0, 1], 1e-4, [-1,0]);

plot2d([1, k*(F/3)^a, k*((b[1][1]+(F/3))^a-b[1][1]^a), k*((b[2][1]+F/3)^a-b[2][1]^a), k*((b[3][1]+F/3)^a-b[3][1]^a)], [F, 0, 800], [gnuplot_preamble, "set size 1.25, 1.30; set nokey"], [gnuplot_term, ps], [gnuplot_out_file, "c:/B7015.radial.eps"]);

plot2d([1, k*(F)^a, k*((b[1][1]+(F))^a-b[1][1]^a), k*((b[2][1]+F)^a-b[2][1]^a), k*((b[3][1]+F)^a-b[3][1]^a)], [F, 0, 2000], [gnuplot_preamble, "set size 1.25, 1.30; set nokey"], [gnuplot_term, ps], [gnuplot_out_file, "c:/B7015.axial.eps"]);

plot2d([1, F/ja(F), F/ja(b[1][1]+F)-F/ja(b[1][1])], [F, 0, 1923]);

j_at(k, a, Fv) := find_root(k*((R + Fv)^a - Fv^a)-1, R, 1, 10000);
/* j_at_(k, a, Fv) := solve(k*((R + Fv)^a - Fv^a)=1, R); */
/* float(last(j_at_s(0.45, 0.505, 283))); */

ja(f) := j_at(rhs(estimates[1]), rhs(estimates[2]), f);

map(ja, Fvs) / jas;

k : rhs(estimates[1]);
a : rhs(estimates[2]);

d_F(F) := k * F^a;
F(dx) := (dx/k)^(1/a)

dx_light : d_F(b[1][1]);
dx_medium : d_F(b[2][1]);
dx_hard : d_F(b[3][1]);
[dx_light, dx_medium, dx_hard];

/* -- Эксперименты с unloaing (lift off) force -- */

/* По идее сила разгружения (отрыва) должна быть равна силе при
   смещении, равном 2м смещениям преднатяга, т.е. один подшипник
   дополнительно вдавили на преднатяг, а второй (противоположенный)
   подшипник полностью освободился и не создает никаких сил.
*/

[F(2*dx_light), F(2*dx_medium), F(2*dx_hard)] / Fmaxs;
/* => [1.27840614668365, 1.175797489443332, 1.095400813765969] */
/* Однако, при таком подходе силы оказываются явно завышенными.
   Попробуем подобрать силу отрыва исходя из того, что у нас может
   быть запас по силе (F_res) или по смещению. Причем запас по
   смещению может быть как постоянный, т.е. не зависящий от преднатяга
   a_res, так и линейно зависящий от преднатяга (a_res + k_res*dx_pre).
*/

/* Осевая реакция DB-пары подшипников от смещения преднатяга dx_pre
   и дополнительного смещения x */
F_pre_x(dx_pre, x) := F(dx_pre+x)-F(dx_pre-x);
/* Сила отрыва, равна реакции при смещении на смещение преднатяга
   минус резерв смещения, минус резерв силы */
F_unl(dx_pre, F_res, a_res, k_res) := F_pre_x(dx_pre, dx_pre-(a_res+k_res*dx_pre)) - F_res;
/* Решаем задачу наименьших квадратов для различных комбинаций
   параметров резервов смещения или сил (все одновременно не решается) */
minsum_pre : sum((F_unl(d_F(b[pl][1]), 0/*F_res*/, a_res, k_res) - b[pl][3])^2, pl, 1, 3);
estimates_pre : lbfgs(minsum_pre, [F_res, a_res, k_res], [0, 0, 0], 1e-4, [-1,0]);

F_unl_r(dx_pre) := subst(estimates_pre, F_unl(dx_pre, F_res, a_res, k_res));

map(F_unl_r, [dx_light, dx_medium, dx_hard]) / Fmaxs;

/* Судя по графику целевой функции для линейной зависимости преднатяга
   минимум все таки один и BFGS сходится к одной и той же точке
   независимо от параметра epsilon.
 */
plot3d(minsum_pre, [a_res, 0.0, 1], [k_res, 0.02, 0.06], [gnuplot_preamble, "set zrange [100:600]"], [grid, 100, 100]);


/* В результате наилучшим приближением является резерв по смещению,
   не зависящий от силы преднатяга (FAG) или зависящий (GMN) (???)

    F_res, a_res, k_res => [light/catalogue,  medium          , high            ]
    -----------------------------------------------------------------------------
 FAG B7015C.T.P4S
 |      0, a_res,     0 => [0.97528114636508, 1.02251891963721, 0.99412060812608]
 |      0, a_res, k_res => [0.94488326905864, 1.01737514609772, 0.99723371469784]
 |      0,     0, k_res => [1.14672450459478, 1.05791815827013, 0.984636320286  ]
 v  F_res,     0,     0 => [0.73926159259014, 1.02233802059083, 1.02288240808539]

 GMN S 61812 C TA
 |      0, a_res, k_res => [0.94940678102013, 1.016479342981635, 0.99764721660497 ]
 |      0, a_res,     0 => [0.90102322537225, 1.007052238524294, 1.002814864832173]
 |      0,     0, k_res => [1.13578351204814, 1.058541529906938, 0.98548007599683 ]
 v  F_res,     0,     0 => [0.58124564517451, 1.009831000025564, 1.050229654783596]

   Судя по всему кроме резервов есть еще что-то. Или вообще не
   резервы. Т.е. в целом лучше юзать значения из каталога и не мудрить
   с резервами. К тому же силу отрыва все равно пока считать не надо.
   А если и надо, то тупо (3,6,9)*преднатяг и все.
*/

/* Аналогичные тесты для наборов из 3, 4 и 5 подшипников показывают
   сходимость 0..-3% (в меньшую сторону, что хорошо).
*/

F_pre3_x(x) := 2*F(dx_1+x)-F(dx_3-x);
F_unl3_r : subst(estimates_pre, F_pre3_x(dx_3-(a_res+k_res*dx_3)) -  F_res);
F_unl3_r / (b[1][3]*2); /* L=0.97893153176177; */
F_unl3_r / (b[1][1]*6); /* L=1.01759391453277; */
F_unl3_r / (b[2][3]*2); /* M=1.02313506216626; */
F_unl3_r / (b[2][1]*6); /* M=1.15635577338582; */
F_unl3_r / (b[3][3]*2); /* H=0.99619633293081; */
F_unl3_r / (b[3][1]*6); /* H=1.20854524282902; */

F_pre4_x(x) := 3*F(dx_1+x)-F(dx_4-x);
F_unl4_r : subst(estimates_pre, F_pre4_x(dx_4-(a_res+k_res*dx_4)) -  F_res);
F_unl4_r / (b[1][3]*3); /* L=0.98208238605111; */

F_pre4_x(x) := F(dx_4+x)-3*F(dx_1-x); /* с другой стороны */
F_unl4_r : subst(estimates_pre, F_pre4_x(dx_1-(a_res+k_res*dx_1)) -  F_res);
F_unl4_r / (b[1][3]); /* L=0.93166871742166 */

F_pre5_x(x) := 3*F(dx_1+x)-2*F(dx_5-x);
F_unl5_r : subst(estimates_pre, F_pre5_x(dx_5-(a_res+k_res*dx_5)) -  F_res);
F_unl5_r / (b[1][3]*3); /* L=0.97578067747243; */

/* Каталог FAG рекомендует следующие силы отрыва для различных
   подшипниковых наборов:
     /\    DB   3 Fv
     //\   TBT  6 Fv
     //\\  QBC  6 Fv
     ///\  QBT  9 Fv
     ///\\ PBC  9 Fv
 */

float(map(lambda([p],b[p][1]*3/b[p][3]), [1,2,3]));
/* => [0.96200607902736, 0.88479262672811, 0.82429378531073] */
/* Как видно, рекомендуемые силы несколько ниже точных сил, данных в
   каталоге для наборов подшипников DB (что и понятно)
*/

/* -- Эксперименты по смещениям преднатяга и жесткостям --
   -- для наборов из 3, 4 и 5 подшипников               --
*/

/* TBT //\ 3 bearings set (1.64 Sa, 1.36 Sr) */

/* solve([2*F(dx_1) = F(dx_3), dx_1 = 2*dx_light - dx_3], [dx_1, dx_3]); */
/* doesn't solve */
dx_3 : find_root(2*F(2*dx_light - dx_3) - F(dx_3), dx_3, 0, 2*dx_light);
dx_1 : 2*dx_light-dx_3;
/* dx_2 : dx_1; */
F(dx_3)=2*F(dx_1);

2*ja(F(dx_1)) / ja(F(dx_light)); /* => 1.68 Sa (+2.4%) / 1.71 (+4.2%)*/
ja(F(dx_3)) / ja(F(dx_light));   /* => 1.16 Sa / 1.15 */
(2*ja(F(dx_1))+ja(F(dx_3))) / (2*ja(F(dx_light))); /* => 1.42 Sr (+4.4%) / 1.43 */

/* QBT ///\ 4 bearings set (2.24 Sa, ??? Sr) */

dx_4 : find_root(3*F(2*dx_light - dx_4) - F(dx_4), dx_4, 0, 2/*3 doesn't work sometimes?*/*dx_light);
dx_1 : 2*dx_light-dx_4;
/* dx_2 : dx_1; */
/* dx_3 : dx_1; */
F(dx_4)=3*F(dx_1);

3*ja(F(dx_1)) / ja(F(dx_light)); /* => 2.25 Sa (+0.4%) / 2.32  (+3.6%)*/
ja(F(dx_4)) / ja(F(dx_light));   /* => 1.25 Sa / 1.23*/
(3*ja(F(dx_1))+ja(F(dx_4))) / (2*ja(F(dx_light))); /* 1.75 Sr /1.77 */

/* PBC ///\\ 5 bearings set (2.64 Sa, ??? Sr) */

dx_5 : find_root(3*F(2*dx_light - dx_5) - 2*F(dx_5), dx_5, 0, 2/*3*/*dx_light);
dx_1 : 2*dx_light-dx_5;
/* dx_2 : dx_1; */
/* dx_3 : dx_1; */
2*F(dx_5)=3*F(dx_1);

3*ja(F(dx_1)) / ja(F(dx_light)); /* => 2.72 Sa (+3%) / 2.74 (+3.8%) */
2*ja(F(dx_5)) / ja(F(dx_light)); /* => 2.19 Sa / 2.17 */
(3*ja(F(dx_1))+2*ja(F(dx_5))) / (2*ja(F(dx_light))); /* 2.45 Sr / 2.46 */

/* соотношения почти одинаковые для B7015C.T.P4S и B7012C.T.P4S. Для
   S 61812 C TA соотношения несколько различаются иногда в большую,
   иногда в меньшую сторону (показаны в комментариях после слеша) */

/* Как видно, есть некоторые отличия (до 5%) в большую сторону при
   расчете жесткости, по сравнению с рекомендованными значениями.
   Что есть плохо!
   Однако стоит проверить эти соотношения для ВСЕХ подшипников FAG и
   посмотреть, возможно каталог намеренно рекомендует наименьшие значения.
*/
